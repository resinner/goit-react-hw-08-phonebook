{"version":3,"file":"static/js/164.f69841cf.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Form/ContactForm.module.scss?77c5","components/Form/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","page/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__t0GrW\",\"label\":\"ContactForm_label__ynIvm\",\"input\":\"ContactForm_input__JYx22\",\"button__wrapper\":\"ContactForm_button__wrapper__A51Kt\",\"button\":\"ContactForm_button__gmVma\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport styles from './ContactForm.module.scss';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(e) {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.warn(`${name} is alredy in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    toast.success(`${name} is added to the contact list!`);\n\n    form.reset();\n  }\n\n  return (\n    <form className={styles.form} onSubmit={handlerSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={styles.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete='true'\n          placeholder=\"Master Yoda\"\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={styles.input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"1234567890\"\n        />\n      </label>\n      <div className={styles.button__wrapper}>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__CLSp2\",\"input\":\"Filter_input__S09D5\"};","import { useDispatch } from 'react-redux';\nimport { setFilterContacts } from '../../redux/contacts/filtersSlice';\n\nimport styles from './Filter.module.scss';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const handlerFilter = e => {\n    dispatch(setFilterContacts(e.target.value));\n  };\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={styles.input}\n        onChange={handlerFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lJuMM\",\"item\":\"ContactList_item__Hx051\",\"name\":\"ContactList_name__r7wZR\",\"number\":\"ContactList_number__NuB-u\",\"button\":\"ContactList_button__rAF2q\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts, selectContactsFilter } from 'redux/contacts/selectors';\n\nimport styles from './ContactList.module.scss';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  const handleDelete = e => {\n    dispatch(deleteContact(e.target.id));\n\n    toast.info(`This contact is delited from your phonebook!`);\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <ul className={styles.list}>\n      {visibilityContacts.map(contact => (\n        <li className={styles.item} key={contact.id}>\n          <span className={styles.name}>{contact.name}: </span>\n          <a href={`tel:${contact.number}`} className={styles.number}>\n            {contact.number}\n          </a>\n          <button\n            className={styles.button}\n            type=\"button\"\n            id={contact.id}\n            onClick={handleDelete}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Container from '../components/Container/Container';\nimport ContactForm from '../components/Form/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport NotificationContainer from 'components/NotificationContainer/NotificationContainer';\n\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styles from '../App.module.scss';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isLoading && !error && <NotificationContainer />}\n\n      <h1 className={styles.title}>Phonebook</h1>\n\n      <ContactForm />\n\n      <h2 className={styles.title}>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n\n      <ToastContainer\n        font-size=\"15px\"\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ContactForm","dispatch","useDispatch","useSelector","className","styles","onSubmit","e","preventDefault","form","target","name","value","number","find","contact","toLowerCase","toast","addContact","reset","type","pattern","title","required","autoComplete","placeholder","Filter","onChange","setFilterContacts","ContactList","filterValue","handleDelete","deleteContact","id","visibilityContacts","includes","map","href","onClick","App","useEffect","fetchContacts","Container","NotificationContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}